name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 匹配 v1.0.0, v2.1.3 等格式的 tag

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 必须添加写入权限以创建 Release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.7'

      - name: Extract version
        id: extract_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          mkdir -p dist
          # 构建各平台可执行文件并包含版本号
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -extldflags=-static" -o dist/m3d-linux-amd64-${{ env.version }} .
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -extldflags=-static" -o dist/m3d-darwin-amd64-${{ env.version }} .
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -extldflags=-static" -o dist/m3d-windows-amd64--${{ env.version }}.exe .

      - name: Create checksums
        run: |
          cd dist
          sha256sum * > checksums.txt
          cd ..

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: ./release-notes.md

      - name: Upload artifacts to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/m3d-linux-amd64-${{ env.version }}
          asset_name: m3d-linux-amd64-${{ env.version }}
          asset_content_type: application/octet-stream

      - name: Upload macOS binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dist/m3d-darwin-amd64-${{ env.version }}
          asset_name: m3d-darwin-amd64-${{ env.version }}
          asset_content_type: application/octet-stream

      - name: Upload Windows binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/dist/m3d-windows-amd64--${{ env.version }}.exe
          asset_name: m3d-windows-amd64--${{ env.version }}.exe
          asset_content_type: application/octet-stream

      - name: Upload checksums
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/checksums.txt
          asset_name: checksums.txt
          asset_content_type: text/plain